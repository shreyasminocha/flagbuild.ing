---
import Base from "@layouts/Base.astro";
import Flag from "@components/Flag.astro";

import BLOCK_ONE from "@data/block-one.json";
import BLOCK_TWO from "@data/block-two.json";

interface FlagSpec {
  country: string;
  iso3166: string;
  src: string;
  note: string | undefined;
}

function wikipediaLink(country: string): string {
  return `https://en.wikipedia.org/wiki/${country.replaceAll(" ", "_")}`;
}

let footnoteNumber = 1;
---

<Base
  title="Georgia Tech Flag Building (Smithgall Building)"
  description="Unofficial catalogue of the flags in the Flag Building at Georgia Tech."
>
  <header>
    <h1>
      <a
        href="https://maps.google.com/maps/place/Flag+Building+(Smithgall+Student+Services+Building)/@33.7742903,-84.3995066,19z/data=!4m6!3m5!1s0x88f50489132cce95:0x4410149dbd9c73d1!8m2!3d33.7744069!4d-84.3996194!16s%2Fg%2F11_sndyyg"
        >Flag Building</a
      >
    </h1>

    <a href="https://github.com/shreyasminocha/flagbuild.ing">Flag data</a> last
    updated (manually) in March 2025.
  </header>

  <div class:list={["blocks"]}>
    <ol id="block-one">
      {
        (BLOCK_ONE as FlagSpec[]).map(({ src, country, iso3166, note }) => {
          return (
            <li id={iso3166}>
              <Flag {src} {country} link={wikipediaLink(country)} />
              {note && <sup>{footnoteNumber++}</sup>}
            </li>
          );
        })
      }
    </ol>

    <ol id="block-two">
      {
        (BLOCK_TWO as FlagSpec[]).map(({ src, country, iso3166, note }) => {
          return (
            <li id={iso3166}>
              <Flag {src} {country} link={wikipediaLink(country)} />
              {note && <sup>{footnoteNumber++}</sup>}
            </li>
          );
        })
      }
    </ol>
  </div>

  <ol>
    {
      (BLOCK_ONE as FlagSpec[])
        .filter((flag) => flag.note !== undefined)
        .map(({ country, note }) => (
          <li>
            <a href={wikipediaLink(country)}>{country}</a>: {note}
          </li>
        ))
    }
    {
      (BLOCK_TWO as FlagSpec[])
        .filter((flag) => flag.note !== undefined)
        .map(({ country, note }) => (
          <li>
            <a href={wikipediaLink(country)}>{country}</a>: {note}
          </li>
        ))
    }
  </ol>
</Base>

<style>
  h1 a {
    text-decoration: none;
  }

  .blocks {
    display: flex;
    max-width: 1200px;
    margin: 0 auto;
    flex-direction: column;
    gap: 5rem;
  }

  @media screen and (min-width: 1280px) {
    .blocks {
      flex-direction: row;
    }

    ol#block-one {
      margin: 0 -5rem 0 5rem; /* compensates for flag rotation */
      padding-left: 0;
    }
  }

  .blocks ol {
    padding-left: 0;
    margin: 0 auto;
    display: grid;
    grid-row-gap: 1rem;
    grid-column-gap: 0;
  }

  .blocks li {
    list-style: none;
    height: 5rem;
  }

  #block-one,
  #block-two {
    padding-left: 5rem; /* compensates for flag rotation */
  }

  #block-one {
    grid-template-columns: repeat(6, 5rem);
  }

  #block-two {
    grid-template-columns: repeat(7, 5rem);
    grid-template-rows: repeat(auto-fit, 5rem);
  }

  #block-one :global(figure),
  #block-two :global(figure) {
    display: inline-block;
    transform-origin: top left;
    transform: rotate(90deg);
  }

  #us {
    grid-column: span 6;
    margin: 0 auto;
  }

  #ne {
    transform-origin: left top;
    transform: scale(0.8);
  }

  #np :global(figure) {
    transform-origin: bottom left;
    transform: scaleY(-1) scale(0.7) rotate(-90deg);
    position: relative;
    top: -6rem; /* jank */
  }
</style>
